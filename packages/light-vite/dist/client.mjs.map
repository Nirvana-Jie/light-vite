{"version":3,"sources":["../src/client/client.ts"],"sourcesContent":["console.log(\"[light-vite] connecting...\");\n\nconst socket = new WebSocket(\"ws://localhost:__HMR_PORT__\", \"light-vite-hmr\");\n\nsocket.addEventListener(\"message\", async ({ data }) => {\n  handleMessage(JSON.parse(data)).catch(console.error);\n});\n\ninterface Update {\n  type: \"js-update\" | \"css-update\";\n  path: string;\n  acceptedPath: string;\n  timestamp: number;\n}\n\nasync function handleMessage(payload: any) {\n  switch (payload.type) {\n    case \"connected\":\n      console.log(\"[light-vite] connected.\");\n      setInterval(() => socket.send(\"ping\"), 1000);\n      break;\n\n    case \"update\":\n      payload.updates.forEach((update: Update) => {\n        if (update.type === \"js-update\") {\n          fetchUpdate(update);\n        }\n      });\n      break;\n  }\n}\n\ninterface HotModule {\n  id: string;\n  callbacks: HotCallback[];\n}\n\ninterface HotCallback {\n  deps: string[];\n  fn: (modules: object[]) => void;\n}\n\nconst hotModulesMap = new Map<string, HotModule>();\nconst pruneMap = new Map<string, (data: any) => void | Promise<void>>();\n\nexport const createHotContext = (ownerPath: string) => {\n  const mod = hotModulesMap.get(ownerPath);\n  if (mod) {\n    mod.callbacks = [];\n  }\n\n  function acceptDeps(deps: string[], callback: any) {\n    const mod: HotModule = hotModulesMap.get(ownerPath) || {\n      id: ownerPath,\n      callbacks: [],\n    };\n    mod.callbacks.push({\n      deps,\n      fn: callback,\n    });\n    hotModulesMap.set(ownerPath, mod);\n  }\n\n  return {\n    accept(deps: any) {\n      if (typeof deps === \"function\" || !deps) {\n        acceptDeps([ownerPath], ([mod]: any) => deps && deps(mod));\n      }\n    },\n    prune(cb: (data: any) => void) {\n      pruneMap.set(ownerPath, cb);\n    },\n  };\n};\n\nasync function fetchUpdate({ path, timestamp }: Update) {\n  const mod = hotModulesMap.get(path);\n  if (!mod) return;\n\n  const moduleMap = new Map();\n  const modulesToUpdate = new Set<string>();\n\n  modulesToUpdate.add(path);\n\n  await Promise.all(\n    Array.from(modulesToUpdate).map(async (dep) => {\n      const [path, query] = dep.split(\"?\");\n      try {\n        const newMod = await import(\n          path + `?t=${timestamp}${query ? `&${query}` : \"\"}`\n        );\n        moduleMap.set(dep, newMod);\n      } catch (e) {}\n    })\n  );\n\n  return () => {\n    for (const { deps, fn } of mod.callbacks) {\n      fn(deps.map((dep: any) => moduleMap.get(dep)));\n    }\n    console.log(`[light-vite] hot updated: ${path}`);\n  };\n}\n\nconst sheetsMap = new Map();\n\nexport function updateStyle(id: string, content: string) {\n  let style = sheetsMap.get(id);\n  if (!style) {\n    style = document.createElement(\"style\");\n    style.setAttribute(\"type\", \"text/css\");\n    style.innerHTML = content;\n    document.head.appendChild(style);\n  } else {\n    style.innerHTML = content;\n  }\n  sheetsMap.set(id, style);\n}\n\nexport function removeStyle(id: string): void {\n  const style = sheetsMap.get(id);\n  if (style) {\n    document.head.removeChild(style);\n  }\n  sheetsMap.delete(id);\n}\n"],"mappings":"AAAA,QAAQ,IAAI,4BAA4B,EAExC,IAAMA,EAAS,IAAI,UAAU,8BAA+B,gBAAgB,EAE5EA,EAAO,iBAAiB,UAAW,MAAO,CAAE,KAAAC,CAAK,IAAM,CACrDC,EAAc,KAAK,MAAMD,CAAI,CAAC,EAAE,MAAM,QAAQ,KAAK,CACrD,CAAC,EASD,eAAeC,EAAcC,EAAc,CACzC,OAAQA,EAAQ,KAAM,CACpB,IAAK,YACH,QAAQ,IAAI,yBAAyB,EACrC,YAAY,IAAMH,EAAO,KAAK,MAAM,EAAG,GAAI,EAC3C,MAEF,IAAK,SACHG,EAAQ,QAAQ,QAASC,GAAmB,CACtCA,EAAO,OAAS,aAClBC,EAAYD,CAAM,CAEtB,CAAC,EACD,KACJ,CACF,CAYA,IAAME,EAAgB,IAAI,IACpBC,EAAW,IAAI,IAERC,EAAoBC,GAAsB,CACrD,IAAMC,EAAMJ,EAAc,IAAIG,CAAS,EACnCC,IACFA,EAAI,UAAY,CAAC,GAGnB,SAASC,EAAWC,EAAgBC,EAAe,CACjD,IAAMH,EAAiBJ,EAAc,IAAIG,CAAS,GAAK,CACrD,GAAIA,EACJ,UAAW,CAAC,CACd,EACAC,EAAI,UAAU,KAAK,CACjB,KAAAE,EACA,GAAIC,CACN,CAAC,EACDP,EAAc,IAAIG,EAAWC,CAAG,CAClC,CAEA,MAAO,CACL,OAAOE,EAAW,EACZ,OAAOA,GAAS,YAAc,CAACA,IACjCD,EAAW,CAACF,CAAS,EAAG,CAAC,CAACC,CAAG,IAAWE,GAAQA,EAAKF,CAAG,CAAC,CAE7D,EACA,MAAMI,EAAyB,CAC7BP,EAAS,IAAIE,EAAWK,CAAE,CAC5B,CACF,CACF,EAEA,eAAeT,EAAY,CAAE,KAAAU,EAAM,UAAAC,CAAU,EAAW,CACtD,IAAMN,EAAMJ,EAAc,IAAIS,CAAI,EAClC,GAAI,CAACL,EAAK,OAEV,IAAMO,EAAY,IAAI,IAChBC,EAAkB,IAAI,IAE5B,OAAAA,EAAgB,IAAIH,CAAI,EAExB,MAAM,QAAQ,IACZ,MAAM,KAAKG,CAAe,EAAE,IAAI,MAAOC,GAAQ,CAC7C,GAAM,CAACJ,EAAMK,CAAK,EAAID,EAAI,MAAM,GAAG,EACnC,GAAI,CACF,IAAME,EAAS,MAAM,OACnBN,EAAO,MAAMC,IAAYI,EAAQ,IAAIA,IAAU,MAEjDH,EAAU,IAAIE,EAAKE,CAAM,CAC3B,MAAE,CAAW,CACf,CAAC,CACH,EAEO,IAAM,CACX,OAAW,CAAE,KAAAT,EAAM,GAAAU,CAAG,IAAKZ,EAAI,UAC7BY,EAAGV,EAAK,IAAKO,GAAaF,EAAU,IAAIE,CAAG,CAAC,CAAC,EAE/C,QAAQ,IAAI,6BAA6BJ,GAAM,CACjD,CACF,CAEA,IAAMQ,EAAY,IAAI,IAEf,SAASC,EAAYC,EAAYC,EAAiB,CACvD,IAAIC,EAAQJ,EAAU,IAAIE,CAAE,EACvBE,EAMHA,EAAM,UAAYD,GALlBC,EAAQ,SAAS,cAAc,OAAO,EACtCA,EAAM,aAAa,OAAQ,UAAU,EACrCA,EAAM,UAAYD,EAClB,SAAS,KAAK,YAAYC,CAAK,GAIjCJ,EAAU,IAAIE,EAAIE,CAAK,CACzB,CAEO,SAASC,EAAYH,EAAkB,CAC5C,IAAME,EAAQJ,EAAU,IAAIE,CAAE,EAC1BE,GACF,SAAS,KAAK,YAAYA,CAAK,EAEjCJ,EAAU,OAAOE,CAAE,CACrB","names":["socket","data","handleMessage","payload","update","fetchUpdate","hotModulesMap","pruneMap","createHotContext","ownerPath","mod","acceptDeps","deps","callback","cb","path","timestamp","moduleMap","modulesToUpdate","dep","query","newMod","fn","sheetsMap","updateStyle","id","content","style","removeStyle"]}